{"version":3,"sources":["components/AI.png","components/Navbar.js","components/Logo.js","components/Inputlink.js","components/Image.js","components/Particle.js","components/Sign in.js","components/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","Logo","options","max","style","height","width","src","AI","alt","Inputlink","onsubmit","onchange","value","type","onChange","onClick","Image","val","id","Particle","params","SignIn","marginTop","htmlFor","name","required","Register","App","app","Clarifai","apiKey","models","predict","then","response","console","log","disp","document","getElementById","bb","outputs","data","regions","region_info","bounding_box","left","left_col","top","top_row","right","right_col","bottom","bottom_row","bound","border","err","useState","setVal","basename","process","path","exact","e","target","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71b00b7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AI.8846bd05.png\";","import React from 'react';\r\nimport './Navbar.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nfunction Navbar() {\r\n    return (\r\n      \r\n        <div className=\"header\">\r\n           \r\n           <Link to='/sign'><h3>Sign Out</h3></Link>\r\n          \r\n        </div>\r\n        \r\n    );\r\n  }\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport AI from './AI.png';\r\n\r\nconst Logo = () => {\r\n    return(\r\n       <Tilt className=\"Tilt\" \r\n        options={{ max : 25 }} \r\n        style={{ height: 200, width: 200 }} >\r\n        <img src={AI} alt=\"\" style={{width:'100px',height:'100px'}}/>\r\n        </Tilt>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Inputlink.css';\r\n\r\n\r\nconst Inputlink = ({onsubmit,onchange,value}) => {\r\n    return(\r\n        <div>\r\n            \r\n        <div className=\"flex justify-center\">\r\n        <div className=\"inputtext flex justify-center\">\r\n            <input type=\"text\" onChange={onchange} value={value} className=\"w-75\"/>\r\n            <button onClick={onsubmit} className=\"w-25 bn grow silver bg-navy\" >Detect</button>\r\n        </div>\r\n        </div>\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inputlink;","import React from 'react';\r\nimport './Image.css';\r\n\r\nconst Image = ({val}) => {\r\n\r\n    return(\r\n        <div id='imgcontainer'>\r\n       <div id='image'>\r\n       <img id=\"img\" src={val} alt=\"\" />  \r\n       <div id=\"bounding\"></div>\r\n       </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Image;","import React from 'react';\r\nimport Particles from 'react-particles-js';\r\n\r\nconst Particle = () =>{\r\n    return(\r\n        <Particles\r\n        className=\"particle\"\r\nparams={{\r\n  \"particles\": {\r\n      \"number\": {\r\n          \"value\": 100\r\n      },\r\n      \"size\": {\r\n          \"value\": 3\r\n      }\r\n  },\r\n  \"interactivity\": {\r\n      \"events\": {\r\n          \"onhover\": {\r\n              \"enable\": true,\r\n              \"mode\": \"repulse\"\r\n          }\r\n      }\r\n  }\r\n}} />\r\n\r\n    )\r\n}\r\n\r\nexport default Particle;","import React from 'react';\r\nimport Particle from './Particle';\r\nimport {Link} from 'react-router-dom';\r\nimport './Sign in.css';\r\n\r\nconst SignIn = () =>{\r\n\r\n\r\n    return(<div>\r\n        <header className=\"signinheader\">\r\n            <Link to='/register'><h3>Register</h3></Link>\r\n        </header>\r\n            <Particle />\r\n            <article className=\"mw5 center bg-transparent br3 pa3 pa4-ns mv3 ba b--black-10 shadow-5\" style={{marginTop:'20vh'}}>\r\n               <div className=\"tc\">\r\n               \r\n               <main className=\"black-80\">\r\n                <form className=\"measure center\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n                \r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" required/>\r\n                </div>\r\n\r\n                <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" required/>\r\n                </div>\r\n                \r\n                </fieldset>\r\n                <div className=\"\" >\r\n                <Link to='/'><input className=\"b pv2 input-reset ba b--black bg-transparent grow pointer f6\" type=\"submit\" value=\"Sign in\" style={{width:'100%'}} /></Link>\r\n                </div>\r\n            </form>\r\n            </main>\r\n            </div>\r\n            </article>   \r\n            </div>\r\n    )  \r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport Particle from './Particle';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Register = () =>{\r\n    return(\r\n    <div>\r\n    <Particle />\r\n            <article className=\"mw5 center bg-transparent br3 pa3 pa4-ns mv3 ba b--black-10 shadow-5\" style={{marginTop:'20vh'}}>\r\n               <div className=\"tc\">\r\n               \r\n               <main className=\"black-80\">\r\n                <form className=\"measure center\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f4 fw6 ph0 mh0\">Register</legend>\r\n                \r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"username\">Username</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"\"  id=\"\" required/>\r\n                </div>\r\n\r\n                <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-id\">Email</label>\r\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" required/>\r\n                </div>\r\n\r\n                <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" required />\r\n                </div>\r\n                \r\n                </fieldset>\r\n                <div className=\"\" >\r\n                <Link to='/'><input className=\"b pv2 input-reset ba b--black bg-transparent grow pointer f6\" type=\"submit\" value=\"Register\" style={{width:'100%'}} /></Link>\r\n                </div>\r\n            </form>\r\n            </main>\r\n            </div>\r\n            </article>   \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import React,{useState} from 'react';\nimport Navbar from './components/Navbar';\nimport Logo from './components/Logo';\nimport Inputlink from './components/Inputlink';\nimport Image from './components/Image';\nimport './App.css';\nimport Particle from './components/Particle';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport SignIn from './components/Sign in';\nimport Clarifai from 'clarifai';\nimport Register from './components/Register';\n\nfunction App() {\n  \n  \n  const app = new Clarifai.App({\n    apiKey: '69ced5c2d63348d4adc9c5abe1135329'\n   });\n\n  onsubmit = () =>{\n    app.models.predict(\"a403429f2ddf4b49b307e318f00e528b\",val).then(\n    (response) => {\n      console.log(response);\n      var disp = document.getElementById(\"img\");\n      const width = disp.width;\n      const height = disp.height;\n      const bb = response.outputs[0].data.regions[0].region_info.bounding_box;\n      const left = bb.left_col*width;\n      const top = bb.top_row*height;\n      const right = width - bb.right_col*width;\n      const bottom = height - bb.bottom_row*height;\n      const bound = document.getElementById('bounding');\n      console.log(bound);\n      bound.style.border = '3px solid rgb(26, 73, 85)';\n      bound.style.top = top + 'px';\n      bound.style.left = left + 'px';\n      bound.style.right = right + 'px';\n      bound.style.bottom = bottom + 'px';\n    },\n    function(err) {\n      console.log(err);\n    }\n  );\n  }\n  \n  \n  const [val,setVal] = useState('');\n  var onchange = (e) =>{\n      setVal(e.target.value);\n      const bounde = document.getElementById('bounding');\n      bounde.style = '0px';\n  }\n\n\n  \n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <div>\n      <Switch>\n\n      <Route path='/' exact>\n        <Navbar />\n        <Logo />\n        <Inputlink onsubmit={onsubmit} onchange={onchange} value={val} /> \n        <Particle />\n        <Image val={val}/>\n      </Route>\n      \n      <Route path='/sign' component={SignIn} />\n\n      <Route path='/register' component={Register} />\n\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}